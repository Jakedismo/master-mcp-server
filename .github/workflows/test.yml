name: Test & Quality

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *' # nightly

jobs:
  lint_typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - run: npm run lint
      - run: npm run typecheck

  unit_integration_node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - name: Run Node tests with coverage
        run: npx vitest -c vitest.config.ts --coverage
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-node
          path: coverage/node

  unit_integration_workers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - name: Run Workers tests with coverage
        run: npx vitest -c vitest.worker.config.ts --coverage
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-workers
          path: coverage/workers

  e2e:
    runs-on: ubuntu-latest
    needs: [unit_integration_node]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - name: Build
        run: npm run build
      - name: Run E2E suite
        run: npx vitest -c vitest.config.ts --dir tests/e2e

  performance:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - name: Start server
        run: |
          node --loader ts-node/esm src/index.ts &
          echo $! > server.pid
          sleep 2
      - name: Run Artillery
        run: npx artillery run tests/perf/artillery/auth-routing.yaml
      - name: Stop server
        if: always()
        run: |
          kill $(cat server.pid) || true

