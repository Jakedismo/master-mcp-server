import{_ as o,c as i,o as t,a6 as r}from"./chunks/framework.CHl2ywxc.js";const g=JSON.parse('{"title":"Master MCP Server Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md","lastUpdated":1755281500000}'),n={name:"README.md"};function d(l,e,a,c,s,u){return t(),i("div",null,e[0]||(e[0]=[r('<h1 id="master-mcp-server-documentation" tabindex="-1">Master MCP Server Documentation <a class="header-anchor" href="#master-mcp-server-documentation" aria-label="Permalink to &quot;Master MCP Server Documentation&quot;">​</a></h1><p>Welcome to the Master MCP Server docs. This documentation covers architecture, configuration, authentication flows, request routing, deployment, and troubleshooting. It also includes end-to-end tutorials and working examples.</p><h2 id="contents" tabindex="-1">Contents <a class="header-anchor" href="#contents" aria-label="Permalink to &quot;Contents&quot;">​</a></h2><ul><li>Getting Started: <code>../docs/getting-started.md</code></li><li>Guides: <ul><li>Authentication: <code>./guides/authentication.md</code></li><li>Configuration Mgmt: <code>./guides/configuration-management.md</code></li><li>Module Loading &amp; Aggregation: <code>./guides/module-loading.md</code></li><li>Request Routing &amp; Resilience: <code>./guides/request-routing.md</code></li><li>Server Management: <code>./guides/server-management.md</code></li></ul></li><li>Tutorials: <ul><li>Beginner Setup: <code>./tutorials/beginner-getting-started.md</code></li><li>OAuth Delegation with GitHub: <code>./tutorials/oauth-delegation-github.md</code></li><li>Cloudflare Workers: <code>./tutorials/cloudflare-workers-tutorial.md</code></li><li>Load Balancing &amp; Resilience: <code>./tutorials/load-balancing-and-resilience.md</code></li></ul></li><li>API Reference: <code>./api/README.md</code> (generated via TypeDoc)</li><li>Configuration: <ul><li>Schema &amp; Reference: <code>./configuration/reference.md</code></li><li>Environment Variables: <code>./configuration/environment-variables.md</code></li><li>Security: <code>./configuration/security.md</code></li><li>Performance: <code>./configuration/performance.md</code></li></ul></li><li>Deployment: <ul><li>Docker: <code>./deployment/docker.md</code></li><li>Cloudflare Workers: <code>./deployment/cloudflare-workers.md</code></li><li>Koyeb: <code>./deployment/koyeb.md</code></li><li>CI/CD: <code>./deployment/cicd.md</code></li></ul></li><li>Troubleshooting: <ul><li>Common Issues: <code>./troubleshooting/common-issues.md</code></li><li>Error Reference: <code>./troubleshooting/errors.md</code></li><li>Performance Troubleshooting: <code>./troubleshooting/performance.md</code></li><li>Security Best Practices: <code>./troubleshooting/security-best-practices.md</code></li></ul></li></ul><p>If you are looking for design notes per phase, see <code>./architecture/*</code> and testing strategy in <code>./testing/phase-9-testing-architecture.md</code>.</p>',5)]))}const p=o(n,[["render",d]]);export{g as __pageData,p as default};
