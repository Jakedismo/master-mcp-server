import{_ as e,c as t,o as n,a6 as s}from"./chunks/framework.CHl2ywxc.js";const u=JSON.parse('{"title":"Tutorial: Beginner Setup","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/beginner-getting-started.md","filePath":"tutorials/beginner-getting-started.md","lastUpdated":1755281500000}'),l={name:"tutorials/beginner-getting-started.md"};function i(o,a,p,d,c,r){return n(),t("div",null,a[0]||(a[0]=[s(`<h1 id="tutorial-beginner-setup" tabindex="-1">Tutorial: Beginner Setup <a class="header-anchor" href="#tutorial-beginner-setup" aria-label="Permalink to &quot;Tutorial: Beginner Setup&quot;">​</a></h1><p>Goal: Run Master MCP Server with a single local backend and call a tool.</p><h2 id="_1-install-and-start" tabindex="-1">1) Install and Start <a class="header-anchor" href="#_1-install-and-start" aria-label="Permalink to &quot;1) Install and Start&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm ci</span></span>
<span class="line"><span>cp .env.example .env</span></span>
<span class="line"><span>npm run dev</span></span></code></pre></div><h2 id="_2-add-a-backend" tabindex="-1">2) Add a Backend <a class="header-anchor" href="#_2-add-a-backend" aria-label="Permalink to &quot;2) Add a Backend&quot;">​</a></h2><p>Create <code>examples/basic-node/config.yaml</code> (already provided) and run with:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>MASTER_CONFIG_PATH=examples/basic-node/config.yaml npm run dev</span></span></code></pre></div><h2 id="_3-verify-health-and-capabilities" tabindex="-1">3) Verify Health and Capabilities <a class="header-anchor" href="#_3-verify-health-and-capabilities" aria-label="Permalink to &quot;3) Verify Health and Capabilities&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>curl http://localhost:3000/health</span></span>
<span class="line"><span>curl -X POST http://localhost:3000/mcp/tools/list -H &#39;content-type: application/json&#39; -d &#39;{}&#39;</span></span></code></pre></div><h2 id="_4-call-a-tool" tabindex="-1">4) Call a Tool <a class="header-anchor" href="#_4-call-a-tool" aria-label="Permalink to &quot;4) Call a Tool&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>curl -X POST http://localhost:3000/mcp/tools/call \\</span></span>
<span class="line"><span>  -H &#39;content-type: application/json&#39; \\</span></span>
<span class="line"><span>  -d &#39;{&quot;name&quot;:&quot;tools.echo&quot;,&quot;arguments&quot;:{&quot;text&quot;:&quot;hello&quot;}}&#39;</span></span></code></pre></div><p>Replace <code>tools.echo</code> with a tool exposed by your backend.</p>`,12)]))}const b=e(l,[["render",i]]);export{u as __pageData,b as default};
