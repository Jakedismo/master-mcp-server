import{_ as t,c as a,o,a6 as i}from"./chunks/framework.CHl2ywxc.js";const g=JSON.parse('{"title":"Quickstart (Node)","description":"","frontmatter":{"title":"Quickstart (Node)"},"headers":[],"relativePath":"getting-started/quickstart-node.md","filePath":"getting-started/quickstart-node.md","lastUpdated":1755281500000}'),s={name:"getting-started/quickstart-node.md"};function r(d,e,c,n,l,p){return o(),a("div",null,e[0]||(e[0]=[i('<h1 id="quickstart-node" tabindex="-1">Quickstart (Node) <a class="header-anchor" href="#quickstart-node" aria-label="Permalink to &quot;Quickstart (Node)&quot;">​</a></h1><p>This minimal example runs Master MCP Server in Node, aggregating two servers.</p><p>Steps</p><ol><li>Create a config file (e.g., <code>config/master.yaml</code>) based on <code>examples/sample-configs/basic.yaml</code>.</li><li>Start the server: <code>npm run start</code>.</li><li>Connect your MCP client to the exposed endpoint.</li></ol><p>Highlights</p><ul><li>Uses <code>src/runtime/node.ts</code> to bootstrap.</li><li>Validates config with <code>SchemaValidator</code>.</li><li>Routes requests via <code>RouteRegistry</code> and <code>RequestRouter</code>.</li></ul><p>See also: Examples → Basic Node Aggregator.</p>',7)]))}const m=t(s,[["render",r]]);export{g as __pageData,m as default};
