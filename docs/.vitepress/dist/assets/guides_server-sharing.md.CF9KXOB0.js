import{_ as e,C as t,c as n,o as h,a6 as i,G as l}from"./chunks/framework.CHl2ywxc.js";const y=JSON.parse('{"title":"Server Sharing","description":"","frontmatter":{"title":"Server Sharing"},"headers":[],"relativePath":"guides/server-sharing.md","filePath":"guides/server-sharing.md","lastUpdated":null}'),r={name:"guides/server-sharing.md"};function p(k,s,o,d,E,g){const a=t("AuthFlowDemo");return h(),n("div",null,[s[0]||(s[0]=i(`<h1 id="server-sharing" tabindex="-1">Server Sharing <a class="header-anchor" href="#server-sharing" aria-label="Permalink to &quot;Server Sharing&quot;">​</a></h1><p>Expose multiple MCP backends through the master server and share a single, consistent endpoint with your team or applications.</p><h2 id="add-backends" tabindex="-1">Add Backends <a class="header-anchor" href="#add-backends" aria-label="Permalink to &quot;Add Backends&quot;">​</a></h2><p>Backends are defined in your master config under <code>servers</code>.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">search</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">local</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    auth_strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master_oauth</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">github-tools</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">local</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    auth_strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">delegate_oauth</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    auth_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      provider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">github</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      authorization_endpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://github.com/login/oauth/authorize</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      token_endpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://github.com/login/oauth/access_token</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      client_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${GITHUB_CLIENT_ID}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      client_secret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">env:GITHUB_CLIENT_SECRET</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      scopes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">repo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">read:user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4010</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><p>Name collisions are avoided by prefixing capabilities with the server id (e.g., <code>search.query</code>, <code>github-tools.repo.read</code>).</p><h2 id="auth-strategies-per-server" tabindex="-1">Auth Strategies per Server <a class="header-anchor" href="#auth-strategies-per-server" aria-label="Permalink to &quot;Auth Strategies per Server&quot;">​</a></h2><p>Choose one per server: <code>master_oauth</code>, <code>delegate_oauth</code>, <code>proxy_oauth</code>, <code>bypass_auth</code>.</p>`,8)),l(a),s[1]||(s[1]=i('<h2 id="share-the-endpoint" tabindex="-1">Share the Endpoint <a class="header-anchor" href="#share-the-endpoint" aria-label="Permalink to &quot;Share the Endpoint&quot;">​</a></h2><ul><li>Local: <code>http://localhost:&lt;port&gt;</code></li><li>Docker: container port mapped to host</li><li>Workers: public URL from your deployment</li></ul><p>Distribute the base URL along with any client token requirements.</p><h2 id="health-monitoring-logs" tabindex="-1">Health Monitoring &amp; Logs <a class="header-anchor" href="#health-monitoring-logs" aria-label="Permalink to &quot;Health Monitoring &amp; Logs&quot;">​</a></h2><ul><li><code>GET /health</code> and <code>GET /metrics</code></li><li>Container logs (Docker/Koyeb) or platform logs (Workers)</li><li>Use <code>performHealthChecks()</code> from code if embedding the master as a library</li></ul>',5))])}const u=e(r,[["render",p]]);export{y as __pageData,u as default};
